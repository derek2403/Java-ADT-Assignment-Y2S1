"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/post-transaction-processing";
exports.ids = ["pages/api/post-transaction-processing"];
exports.modules = {

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("fs/promises");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./pages/api/post-transaction-processing.js":
/*!**************************************************!*\
  !*** ./pages/api/post-transaction-processing.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n// pages/api/post-transaction-processing.js\n\n\n// Update these paths to match your project structure\nconst TRANSACTIONS_FILE = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), '../backend/transaction.txt');\nconst DONATION_REQUESTS_FILE = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), '../backend/donation_requests.txt');\nconst DONATIONS_FILE = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), '../backend/donations.txt');\nconst RECEIVE_HISTORY_FILE = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), '../backend/receivehistory.txt');\nconst DONATE_HISTORY_FILE = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), '../backend/donatehistory.txt');\nasync function handler(req1, res) {\n    if (req1.method === 'POST') {\n        try {\n            // 1. Read transaction.txt\n            const transactionData = await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().readFile(TRANSACTIONS_FILE, 'utf-8');\n            const transactions = transactionData.split('\\n').filter(Boolean);\n            if (transactions.length === 0) {\n                throw new Error('No transactions found.');\n            }\n            const lastTransaction = transactions[transactions.length - 1].split(',');\n            const [, requestId, donationId] = lastTransaction.map((part)=>part.trim()\n            );\n            console.log('Last Transaction:', lastTransaction);\n            console.log('Donation ID:', donationId);\n            console.log('Request ID:', requestId);\n            // 2 & 3. Process donation request\n            const requestData = await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().readFile(DONATION_REQUESTS_FILE, 'utf-8');\n            const requests = requestData.split('\\n').filter(Boolean);\n            console.log('Requests:', requests);\n            const matchingRequest = requests.find((req)=>req.split(',')[0].trim() === requestId\n            );\n            console.log('Matching Request:', matchingRequest);\n            if (matchingRequest) {\n                await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().appendFile(RECEIVE_HISTORY_FILE, matchingRequest + '\\n');\n                console.log('Appended to RECEIVE_HISTORY_FILE:', matchingRequest);\n            } else {\n                console.warn('Request ID not found:', requestId);\n            }\n            // 4. Remove processed request\n            const updatedRequests = requests.filter((req)=>req.split(',')[0].trim() !== requestId\n            );\n            console.log('Updated Requests:', updatedRequests);\n            await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().writeFile(DONATION_REQUESTS_FILE, updatedRequests.join('\\n') + '\\n');\n            // 5 & 6. Process donation\n            const donationData = await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().readFile(DONATIONS_FILE, 'utf-8');\n            const donations = donationData.split('\\n').filter(Boolean);\n            console.log('Donations:', donations);\n            const matchingDonation = donations.find((don)=>don.split(',')[0].trim() === donationId\n            );\n            console.log('Matching Donation:', matchingDonation);\n            if (matchingDonation) {\n                await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().appendFile(DONATE_HISTORY_FILE, matchingDonation + '\\n');\n                console.log('Appended to DONATE_HISTORY_FILE:', matchingDonation);\n            } else {\n                console.warn('Donation ID not found:', donationId);\n            }\n            // 7. Remove processed donation\n            const updatedDonations = donations.filter((don)=>don.split(',')[0].trim() !== donationId\n            );\n            console.log('Updated Donations:', updatedDonations);\n            await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().writeFile(DONATIONS_FILE, updatedDonations.join('\\n') + '\\n');\n            res.status(200).json({\n                message: 'Post-transaction processing completed successfully'\n            });\n        } catch (error) {\n            console.error('Error in post-transaction processing:', error);\n            res.status(500).json({\n                error: 'Failed to process transaction'\n            });\n        }\n    } else {\n        res.setHeader('Allow', [\n            'POST'\n        ]);\n        res.status(405).end(`Method ${req1.method} Not Allowed`);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/post-transaction-processing.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/post-transaction-processing.js"));
module.exports = __webpack_exports__;

})();